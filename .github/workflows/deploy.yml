name: 🚀 Deploy to App Runner

on:  
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    name: 🛠️ Build .NET App
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v5

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 🧪 Restore & Build
        run: |
          dotnet restore ./src/HelloWorld
          dotnet build ./src/HelloWorld --no-restore --configuration Release

  docker:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v5

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS \
          --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: 🐳 Build & Push Image
        run: |
          IMAGE_TAG=latest
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          docker buildx build --platform linux/amd64 -t $ECR_URI .
          docker push $ECR_URI

  deploy:
    name: 🚀 Terraform Deploy
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v5

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 🏗️ Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: 🚀 Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve
        
      - name: 🚀 Trigger App Runner Deployment
        run: |
          aws apprunner start-deployment \
            --service-arn arn:aws:apprunner:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:service/${{ secrets.APP_RUNNER_SERVICE_NAME }}